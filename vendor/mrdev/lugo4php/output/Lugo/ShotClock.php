<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto

namespace Lugo;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Stores the side of the team in attack and the time remaining holding the ball.
 * The team side is changed as soon a bot of the defense team catch the ball.
 *
 * Generated from protobuf message <code>lugo.ShotClock</code>
 */
class ShotClock extends \Google\Protobuf\Internal\Message
{
    /**
     * Team side of the team in attack.
     *
     * Generated from protobuf field <code>.lugo.Team.Side team_side = 6;</code>
     */
    private $team_side = 0;
    /**
     * Remaining turns the attack team may hold the ball
     *
     * Generated from protobuf field <code>uint32 remaining_turns = 7;</code>
     */
    private $remaining_turns = 0;

    public function __construct() {
        \GPBMetadata\Server::initOnce();
        parent::__construct();
    }

    /**
     * Team side of the team in attack.
     *
     * Generated from protobuf field <code>.lugo.Team.Side team_side = 6;</code>
     * @return int
     */
    public function getTeamSide()
    {
        return $this->team_side;
    }

    /**
     * Team side of the team in attack.
     *
     * Generated from protobuf field <code>.lugo.Team.Side team_side = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setTeamSide($var)
    {
        GPBUtil::checkEnum($var, \Lugo\Team_Side::class);
        $this->team_side = $var;

        return $this;
    }

    /**
     * Remaining turns the attack team may hold the ball
     *
     * Generated from protobuf field <code>uint32 remaining_turns = 7;</code>
     * @return int
     */
    public function getRemainingTurns()
    {
        return $this->remaining_turns;
    }

    /**
     * Remaining turns the attack team may hold the ball
     *
     * Generated from protobuf field <code>uint32 remaining_turns = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setRemainingTurns($var)
    {
        GPBUtil::checkUint32($var);
        $this->remaining_turns = $var;

        return $this;
    }

}

