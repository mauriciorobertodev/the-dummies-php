<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto

namespace Lugo;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Order to the game server. To be sent by players during the Listening phase.
 *
 * Generated from protobuf message <code>lugo.Order</code>
 */
class Order extends \Google\Protobuf\Internal\Message
{
    protected $action;

    public function __construct() {
        \GPBMetadata\Server::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.lugo.MoveOrder move = 1;</code>
     * @return \Lugo\MoveOrder
     */
    public function getMove()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.lugo.MoveOrder move = 1;</code>
     * @param \Lugo\MoveOrder $var
     * @return $this
     */
    public function setMove($var)
    {
        GPBUtil::checkMessage($var, \Lugo\MoveOrder::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lugo.CatchOrder catch = 2;</code>
     * @return \Lugo\CatchOrder
     */
    public function getCatch()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.lugo.CatchOrder catch = 2;</code>
     * @param \Lugo\CatchOrder $var
     * @return $this
     */
    public function setCatch($var)
    {
        GPBUtil::checkMessage($var, \Lugo\CatchOrder::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lugo.KickOrder kick = 3;</code>
     * @return \Lugo\KickOrder
     */
    public function getKick()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.lugo.KickOrder kick = 3;</code>
     * @param \Lugo\KickOrder $var
     * @return $this
     */
    public function setKick($var)
    {
        GPBUtil::checkMessage($var, \Lugo\KickOrder::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lugo.JumpOrder jump = 4;</code>
     * @return \Lugo\JumpOrder
     */
    public function getJump()
    {
        return $this->readOneof(4);
    }

    /**
     * Generated from protobuf field <code>.lugo.JumpOrder jump = 4;</code>
     * @param \Lugo\JumpOrder $var
     * @return $this
     */
    public function setJump($var)
    {
        GPBUtil::checkMessage($var, \Lugo\JumpOrder::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getAction()
    {
        return $this->whichOneof("action");
    }

}

